{
  "name": "sap-backend-microservices",
  "version": "2.0.0",
  "description": "Production-Ready Enterprise Microservices Architecture for SAP Backend",
  "private": true,
  "workspaces": [
    "api-gateway",
    "services/*",
    "shared",
    "infrastructure/*",
    "tools/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:api-gateway\" \"npm run dev:auth\" \"npm run dev:user\" \"npm run dev:content\" \"npm run dev:subscription\"",
    "dev:api-gateway": "cd api-gateway && npm run dev",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:user": "cd services/user-service && npm run dev",
    "dev:content": "cd services/content-service && npm run dev",
    "dev:subscription": "cd services/subscription-management-service && npm run dev",
    "build": "npm run build:shared && npm run build:services && npm run build:api-gateway",
    "build:shared": "cd shared && npm run build",
    "build:services": "concurrently \"cd services/auth-service && npm run build\" \"cd services/user-service && npm run build\" \"cd services/content-service && npm run build\" \"cd services/subscription-management-service && npm run build\"",
    "build:api-gateway": "cd api-gateway && npm run build",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "concurrently \"cd api-gateway && npm test\" \"cd services/auth-service && npm test\" \"cd services/user-service && npm test\" \"cd services/content-service && npm test\" \"cd services/subscription-management-service && npm test\"",
    "test:integration": "cd backend/integration-tests && npm test",
    "test:performance": "cd backend/performance-tests && npm test",
    "docker:build": "docker-compose -f infrastructure/docker/docker-compose.yml build",
    "docker:up": "docker-compose -f infrastructure/docker/docker-compose.yml up -d",
    "docker:down": "docker-compose -f infrastructure/docker/docker-compose.yml down",
    "k8s:deploy": "kubectl apply -f infrastructure/kubernetes/",
    "k8s:delete": "kubectl delete -f infrastructure/kubernetes/",
    "lint": "concurrently \"cd api-gateway && npm run lint\" \"cd services/auth-service && npm run lint\" \"cd services/user-service && npm run lint\" \"cd services/content-service && npm run lint\" \"cd services/subscription-management-service && npm run lint\"",
    "lint:fix": "concurrently \"cd api-gateway && npm run lint:fix\" \"cd services/auth-service && npm run lint:fix\" \"cd services/user-service && npm run lint:fix\" \"cd services/content-service && npm run lint:fix\" \"cd services/subscription-management-service && npm run lint:fix\"",
    "clean": "npm run clean:dist && npm run clean:node-modules",
    "clean:dist": "rimraf api-gateway/dist services/*/dist shared/dist",
    "clean:node-modules": "rimraf node_modules api-gateway/node_modules services/*/node_modules shared/node_modules",
    "install:all": "npm install && npm run install:services",
    "install:services": "concurrently \"cd api-gateway && npm install\" \"cd services/auth-service && npm install\" \"cd services/user-service && npm install\" \"cd services/content-service && npm install\" \"cd services/subscription-management-service && npm install\" \"cd shared && npm install\"",
    "typecheck": "concurrently \"cd api-gateway && npm run typecheck\" \"cd services/auth-service && npm run typecheck\" \"cd services/user-service && npm run typecheck\" \"cd services/content-service && npm run typecheck\" \"cd services/subscription-management-service && npm run typecheck\"",
    "docs:generate": "cd docs && npm run generate",
    "monitoring:up": "docker-compose -f infrastructure/monitoring/docker-compose.monitoring.yml up -d",
    "monitoring:down": "docker-compose -f infrastructure/monitoring/docker-compose.monitoring.yml down"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.44.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.1",
    "typescript": "^5.1.6"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Project-Corp-Astro/Sap_Backend.git"
  },
  "keywords": [
    "microservices",
    "sap",
    "backend",
    "kubernetes",
    "docker",
    "typescript",
    "api-gateway",
    "rbac",
    "enterprise"
  ],
  "author": "Project Corp Astro",
  "license": "MIT",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:unit"
    }
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
